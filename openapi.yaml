openapi: 3.0.0
info:
  title: 3days API
  version: 1.0.0
  description: 3days API 명세서

tags:
  - name: users
    description: 사용자 계정 관리 및 프로필 관련 API
  - name: auth
    description: 사용자 인증 및 토큰 관리 API
  - name: locations
    description: 지역 및 위치 정보 관련 API
  - name: companies
    description: 회사 정보 조회 및 검색 API

paths:
  /auth/codes:
    post:
      summary: SMS 인증 요청
      description: 회원 가입 또는 로그인을 위한 SMS 인증을 요청합니다.
      tags:
        - auth
      operationId: requestVerification
      parameters:
        - $ref: '#/components/parameters/OSTypeHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendAuthCodeRequest'
      responses:
        '201':
          description: 인증 요청 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendAuthCodeResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /auth/codes/{authCodeId}/existingUser:
    post:
      summary: SMS 인증 코드 확인 (기존 유저)
      description: 발급된 인증 코드 아이디(authCodeId)와 SMS 인증 코드로 인증을 완료합니다.
      tags:
        - auth
      operationId: existingUserVerifyCode
      parameters:
        - $ref: '#/components/parameters/AuthCodeIdPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCodeRequest'
      responses:
        '200':
          description: 인증 완료 및 토큰 발급
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistingUserVerifyCodeResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/codes/{authCodeId}/newUser:
    post:
      summary: SMS 인증 코드 확인 (신규 유저)
      description: 발급된 인증 코드 아이디(authCodeId)와 SMS 인증 코드로 인증을 완료합니다.
      tags:
        - auth
      operationId: newUserVerifyCode
      parameters:
        - $ref: '#/components/parameters/AuthCodeIdPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCodeRequest'
      responses:
        '200':
          description: 인증 완료 및 토큰 발급
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUserVerifyCodeResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /users:
    post:
      summary: 회원 가입
      description: SMS 인증 후 발급된 registerToken으로 회원 가입을 완료합니다.
      tags:
        - users
      operationId: registerUser
      parameters:
        - $ref: '#/components/parameters/RegisterTokenHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
      responses:
        '201':
          description: 회원 가입 성공
          headers:
            Location:
              schema:
                type: string
              description: 새로 생성된 사용자 리소스의 URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/RegisterTokenExpired'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/token/refresh:
    post:
      summary: 액세스 토큰 갱신
      description: 리프레시 토큰을 사용하여 새로운 액세스 토큰을 발급받습니다.
      tags:
        - auth
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: 토큰 갱신 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
        '400':
          $ref: '#/components/responses/InvalidRefreshToken'
        '401':
          $ref: '#/components/responses/RefreshTokenExpired'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /locations:
    get:
      summary: 지역 검색
      description: 지역 정보를 검색합니다.
      tags:
        - locations
      operationId: searchLocations
      parameters:
        - $ref: '#/components/parameters/NameQuery'
        - $ref: '#/components/parameters/NextQuery'
        - $ref: '#/components/parameters/LimitQuery'
      responses:
        '200':
          description: 지역 검색 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchLocationsResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /companies:
    get:
      summary: 직장명 검색
      description: 직장을 검색합니다.
      tags:
        - companies
      operationId: searchCompanies
      parameters:
        - $ref: '#/components/parameters/NameQuery'
        - $ref: '#/components/parameters/NextQuery'
        - $ref: '#/components/parameters/LimitQuery'
      responses:
        '200':
          description: 검색 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCompaniesResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /companies/{companyId}:
    get:
      summary: 직장 상세 정보 조회
      description: 직장 식별자에 해당하는 직장 상세 정보를 조회합니다.
      tags:
        - companies
      operationId: getCompanyDetails
      parameters:
        - $ref: '#/components/parameters/CompanyIdPath'
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCompanyDetailsResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Bearer 토큰을 이용한 인증

  parameters:
    OSTypeHeader:
      in: header
      name: X-OS-Type
      required: true
      schema:
        $ref: '#/components/schemas/OSType'
      description: 사용자의 OS 유형 (IOS 또는 AOS)

    RegisterTokenHeader:
      in: header
      name: X-Register-Token
      required: true
      schema:
        type: string
      description: 번호 인증 후 발급받은 회원가입용 토큰

    AuthCodeIdPath:
      in: path
      name: authCodeId
      required: true
      schema:
        type: string
        format: uuid
      description: 인증 요청 시 발급된 고유 식별자 (UUID 형식)

    NameQuery:
      in: query
      name: name
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 128
      description: 검색할 이름

    NextQuery:
      in: query
      name: next
      required: false
      schema:
        type: string
        format: uuid
      description: 페이지네이션을 위한 다음 검색 시작 ID

    LimitQuery:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        default: 20
        minimum: 1
        maximum: 100
      description: 반환할 최대 결과 수

    CompanyIdPath:
      in: path
      name: companyId
      required: true
      schema:
        type: string
        format: uuid
      description: 조회할 회사의 고유 식별자

  responses:
    BadRequest:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            invalidRequest:
              value:
                time: "2024-05-01T00:00:00Z"
                type: "COMMON"
                code: "1001"
                message: "잘못된 요청입니다."

    RegisterTokenExpired:
      description: 회원 가입 토큰 만료
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            tokenExpired:
              value:
                time: "2024-05-01T00:00:00Z"
                type: "AUTH"
                code: "1003"
                message: "회원 가입 토큰이 만료되었습니다."

    NotFound:
      description: 리소스를 찾을 수 없음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            notFound:
              value:
                time: "2024-05-01T00:00:00Z"
                type: "COMMON"
                code: "1002"
                message: "리소스를 찾을 수 없습니다."

    InternalServerError:
      description: 서버 오류
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            serverError:
              value:
                time: "2024-05-01T00:00:00Z"
                type: "COMMON"
                code: "1003"
                message: "서버 오류가 발생했습니다."

    RefreshTokenExpired:
      description: 리프레시 토큰 만료
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            tokenExpired:
              value:
                time: "2024-05-01T00:00:00Z"
                type: "AUTH"
                code: "1008"
                message: "리프레시 토큰이 만료되었습니다."

    InvalidRefreshToken:
      description: 유효하지 않은 리프레시 토큰
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            invalidToken:
              value:
                time: "2024-05-01T00:00:00Z"
                type: "AUTH"
                code: "1009"
                message: "유효하지 않은 리프레시 토큰입니다."

  schemas:
    ErrorResponse:
      type: object
      properties:
        time:
          type: string
          format: date-time
          description: 에러 발생 시각 (ISO 8601)
          example: "2024-05-01T00:00:00Z"
        type:
          type: string
          description: 에러 유형
          example: COMMON
        code:
          type: string
          description: 에러 코드
          example: "1001"
        message:
          type: string
          description: 상세 에러 메시지
      required:
        - time
        - type
        - code

    SendAuthCodeRequest:
      type: object
      properties:
        phoneNumber:
          type: string
          description: 사용자의 전화번호 (한국 휴대폰 번호 형식)
          pattern: '^01[0-9]{8,9}$'
      required:
        - phoneNumber

    SendAuthCodeResponse:
      type: object
      properties:
        authCodeId:
          type: string
          format: uuid
          description: 인증 요청에 대한 고유 식별자 (UUID 형식)
        userStatus:
          type: string
          enum: [ NEW, EXISTING ]
          description: 사용자 상태 (신규 사용자 또는 기존 사용자)
      required:
        - authCodeId

    VerifyCodeRequest:
      type: object
      properties:
        verificationCode:
          type: string
          description: 사용자가 입력한 SMS 인증 코드 (6자리 숫자)
          pattern: '^\d{6}$'
      required:
        - verificationCode

    ExistingUserVerifyCodeResponse:
      type: object
      description: 기존 사용자 인증 응답
      required:
        - accessToken
        - refreshToken
        - expiresIn
      properties:
        accessToken:
          type: string
          description: 액세스 토큰
        refreshToken:
          type: string
          description: 리프레시 토큰
        accessTokenExpiresIn:
          type: integer
          description: 액세스 토큰의 유효 기간 (초 단위)
        refreshTokenExpiresIn:
          type: integer
          description: 리프레시 토큰의 유효 기간 (초 단위)

    NewUserVerifyCodeResponse:
      type: object
      description: 새 사용자 인증 응답
      required:
        - registerToken
      properties:
        expiresIn:
          type: integer
          description: 회원 가입 토큰의 유효 기간 (초 단위)
        registerToken:
          type: string
          description: 회원 가입을 위한 토큰

    RegisterUserRequest:
      type: object
      description: 회원 가입 시 필요한 사용자 정보
      properties:
        name:
          type: string
          description: 사용자 이름
        phoneNumber:
          type: string
          description: 사용자 전화번호
          pattern: '^01[0-9]{8,9}$'
          example: "01012345678"
        profile:
          $ref: '#/components/schemas/UserProfile'
        desiredPartner:
          $ref: '#/components/schemas/UserDesiredPartner'
      required:
        - name
        - phoneNumber
        - profile
        - desiredPartner

    UserProfile:
      type: object
      description: 사용자 프로필 정보
      properties:
        gender:
          $ref: '#/components/schemas/Gender'
        birthYear:
          type: integer
          description: 사용자의 출생년도
        companyId:
          type: string
          format: uuid
          description: 사용자의 회사 ID
        jobOccupation:
          $ref: '#/components/schemas/JobOccupation'
        locationIds:
          type: array
          items:
            type: string
            format: uuid
          description: 사용자의 활동 지역 목록 ID 리스트
      required:
        - gender
        - birthYear
        - companyId
        - jobOccupation
        - locationIds

    UserDesiredPartner:
      type: object
      description: 사용자가 원하는 파트너의 조건
      properties:
        birthYearRange:
          $ref: '#/components/schemas/BirthYearRange'
        jobOccupations:
          $ref: '#/components/schemas/JobOccupations'
        preferDistance:
          $ref: '#/components/schemas/PreferDistance'
      required:
        - jobOccupations
        - preferDistance

    BirthYearRange:
      type: object
      properties:
        start:
          type: integer
          description: 원하는 파트너의 최소 년생
          example: 1990
        end:
          type: integer
          description: 원하는 파트너의 최대 년생
          example: 2000
      required:
        - start
        - end

    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
          description: 유효한 리프레시 토큰
      required:
        - refreshToken

    RegisterUserResponse:
      $ref: '#/components/schemas/TokenResponse'

    RefreshTokenResponse:
      $ref: '#/components/schemas/TokenResponse'

    TokenResponse:
      type: object
      description: 토큰 발급 응답
      properties:
        accessToken:
          type: string
          description: 액세스 토큰
        refreshToken:
          type: string
          description: 리프레시 토큰
        expiresIn:
          type: integer
          description: 액세스 토큰의 유효 기간 (초 단위)
      required:
        - accessToken
        - refreshToken
        - expiresIn

    SearchLocationsResponse:
      type: object
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
        next:
          type: string
          format: uuid
          description: 다음 페이지를 위한 키, 더 이상 결과가 없으면 null
      required:
        - locations
      description: 위치 정보 리스트 응답

    Location:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "0191cd0e-a061-7213-b39e-51274c1e7c71"
        region:
          type: string
          example: "서울특별시"
        subRegion:
          type: string
          example: "종로구"
      required:
        - id
        - region
        - subRegion

    SearchCompaniesResponse:
      type: object
      properties:
        companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
        next:
          type: string
          format: uuid
          description: 다음 페이지를 위한 키, 더 이상 결과가 없으면 null
      required:
        - companies

    GetCompanyDetailsResponse:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/Company'
      required:
        - company

    Company:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "회사 식별자"
        name:
          type: string
          description: "회사명"
      required:
        - id
        - name

    OSType:
      type: string
      enum: [ IOS, AOS ]
      description: 사용자의 운영 체제 유형

    Gender:
      type: string
      enum: [ MALE, FEMALE ]
      description: 사용자의 성별

    JobOccupation:
      type: string
      enum: [
        BUSINESS_ADMIN,
        SALES_MARKETING,
        RESEARCH_DEVELOPMENT,
        IT_INFORMATION,
        FINANCE_ACCOUNTING,
        MANUFACTURING_PRODUCTION,
        EDUCATION_ACADEMIA,
        LAW_ADMINISTRATION,
        MILITARY_SECURITY,
        HEALTHCARE_MEDICAL,
        MEDIA_ENTERTAINMENT,
        ARTS_DESIGN,
        SPORTS,
        CONSTRUCTION_ENGINEERING,
        TRANSPORTATION_LOGISTICS,
        AGRICULTURE_FARMING,
        SERVICE_INDUSTRY,
        OTHER
      ]
      description: 직업군 분류

    JobOccupations:
      type: array
      items:
        $ref: '#/components/schemas/JobOccupation'

    PreferDistance:
      type: string
      enum: [ ONLY_MY_AREA, INCLUDE_SURROUNDING_REGIONS, ANYWHERE ]
      description: 선호하는 거리 (내 지역만, 주변 지역 포함, 어디든)
