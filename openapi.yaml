openapi: 3.1.0
info:
  title: 3days API
  version: 1.0.0
  description: 3days API 명세서

tags:
  - name: users
    description: 사용자 관련 API
  - name: locations
    description: 위치 관련 API
  - name: companies
    description: 직장 관련 API

parameters:
  OSTypeHeader:
    in: header
    name: X-OS-Type
    required: true
    schema:
      $ref: '#/components/schemas/OSType'
    description: 사용자의 OS 유형 (IOS 또는 AOS)

paths:
  /users/verifications:
    post:
      summary: SMS 인증 요청
      description: |
        - 회원 가입 또는 로그인 토큰 발급을 위한 SMS 인증을 요청합니다.
      tags:
        - users
      operationId: requestVerification
      parameters:
        - $ref: '#/parameters/OSTypeHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: string
                  description: 사용자의 전화번호 (한국 휴대폰 번호 형식)
                  pattern: '^01[0-9]{8,9}$'
      responses:
        '201':
          description: 인증 요청 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  verificationId:
                    type: string
                    format: uuid
                    description: 인증 요청에 대한 고유 식별자 (UUID 형식)
        '400':
          description: 잘못된 전화번호 형식 또는 유효하지 않은 OS 유형

  /users/verifications/{verificationId}:
    put:
      summary: SMS 인증 코드 확인
      description: |
        - SMS 인증 요청 시 발급된 verificationId와 함께 인증 코드를 입력하여 인증을 완료합니다.
        - 새 사용자의 경우 회원 가입을 위한 registerToken을 발급합니다.
        - 기존 사용자의 경우 로그인을 위한 accessToken과 refreshToken을 발급합니다.
      tags:
        - users
      operationId: verifyCode
      parameters:
        - $ref: '#/parameters/OSTypeHeader'
        - in: path
          name: verificationId
          required: true
          schema:
            type: string
            format: uuid
          description: 인증 요청 시 발급된 고유 식별자 (UUID 형식)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                verificationCode:
                  type: string
                  description: 사용자가 입력한 SMS 인증 코드 (6자리 숫자)
                  pattern: '^\d{6}$'
      responses:
        '200':
          description: 인증 완료
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/NewUserVerificationResponse'
                  - $ref: '#/components/schemas/ExistingUserVerificationResponse'
        '400':
          description: 잘못되거나 만료된 인증 코드
        '404':
          description: 존재하지 않는 verificationId

  /users:
    post:
      summary: 회원 가입
      description: |
        - SMS 인증 시 발급된 registerToken을 이용하여 회원 가입을 완료합니다.
        - 회원 가입 완료 시 accessToken과 refreshToken을 발급합니다.
      tags:
        - users
      operationId: registerUser
      parameters:
        - $ref: '#/parameters/OSTypeHeader'
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: 회원 가입 성공
          headers:
            Location:
              schema:
                type: string
              description: 새로 생성된 사용자 리소스의 URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: 잘못된 입력 데이터
        '401':
          description: 유효하지 않거나 만료된 registerToken
        '409':
          description: 이미 존재하는 사용자

  /users/token/refresh:
    post:
      summary: 액세스 토큰 갱신
      description: |
        - 리프레시 토큰을 사용하여 새로운 액세스 토큰을 발급받습니다.
      tags:
        - users
      operationId: refreshToken
      parameters:
        - $ref: '#/parameters/OSTypeHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: 유효한 리프레시 토큰
      responses:
        '200':
          description: 토큰 갱신 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: 유효하지 않거나 만료된 리프레시 토큰

  /locations:
    get:
      summary: 장소 리스트 조회
      description: 장소 리스트를 조회합니다.
      tags:
        - locations
      parameters:
        - $ref: '#/parameters/OSTypeHeader'
      responses:
        '200':
          description: 장소 리스트 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationsResponse'
  /companies:
    get:
      summary: 직장명을 통한 직장 검색 기능
      description: 키워드로 주어진 name으로 시작하는 직장 리스트를 반환합니다
      tags:
        - companies
      parameters:
        - name: name
          in: query
          description: Name of the company to search for
          required: true
          schema:
            type: string
        - name: next
          in: query
          description: ID to start the search from for pagination
          required: false
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  companies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Company'
                  next:
                    type: string
                    description: Next key for pagination, null if no more results
  /companies/{companyId}:
    get:
      summary: 직장 식별자를 통한 직장 조회
      description: 직장 식별자에 대응되는 직장 정보 조회
      tags:
        - companies
      parameters:
        - name: companyId
          in: path
          description: 직장 식별자
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  company:
                    type: object
                    $ref: '#/components/schemas/Company'
        '404':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Bearer 토큰을 이용한 인증

  schemas:
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
          description: 에러발생시각 timestamp
        status:
          type: integer
          description: http status code
        error:
          type: string
          description: The error type
          example: USER
        exception:
          type: string
          description: The exception class name
        message:
          type: string
          description: Detailed error message, customizable per API
        path:
          type: string
          description: The path of the request that caused the error
      required:
        - timestamp
        - status
        - error
        - message
        - path
    UserRegistration:
      type: object
      description: 회원 가입 시 필요한 사용자 정보
      properties:
        name:
          type: string
          description: 사용자 이름
        profile:
          $ref: '#/components/schemas/UserProfile'
        desiredPartner:
          $ref: '#/components/schemas/UserDesiredPartner'
      required:
        - name
        - profile
        - desiredPartner

    UserProfile:
      type: object
      description: 사용자 프로필 정보
      properties:
        gender:
          type: string
          enum: [ MALE, FEMALE ]
          description: 사용자의 성별
        birthYear:
          type: integer
          description: 사용자의 출생년도
        company:
          type: string
          description: 사용자의 회사명
        job:
          type: string
          description: 사용자의 직업
        locations:
          type: array
          items:
            type: string
            format: uuid
          description: 사용자의 활동 지역 목록 ID 리스트
      required:
        - gender
        - birthYear
        - company
        - job
        - locations

    UserDesiredPartner:
      type: object
      description: 사용자가 원하는 파트너의 조건
      properties:
        birthYearRange:
          type: object
          properties:
            start:
              type: integer
              description: 원하는 파트너의 최소 년생 (ex, 1990)
            end:
              type: integer
              description: 원하는 파트너의 최대 년생 (ex, 2000)
        job:
          type: string
          description: 원하는 파트너의 직업
        preferDistance:
          type: string
          enum: [ ONLY_MY_AREA, INCLUDE_SURROUNDING_REGIONS, ANYWHERE ]
          description: 선호하는 거리 (내 지역만, 주변 지역 포함, 어디든)
      required:
        - birthYearRange
        - job
        - preferDistance

    User:
      type: object
      description: 사용자 정보
      properties:
        id:
          type: string
          description: 사용자 고유 식별자
        name:
          type: string
          description: 사용자 이름
        profile:
          $ref: '#/components/schemas/UserProfile'
        desiredPartner:
          $ref: '#/components/schemas/UserDesiredPartner'

    NewUserVerificationResponse:
      type: object
      description: 새 사용자 인증 응답
      properties:
        registerToken:
          type: string
          description: 회원 가입을 위한 토큰

    ExistingUserVerificationResponse:
      type: object
      description: 기존 사용자 인증 응답
      properties:
        accessToken:
          type: string
          description: 액세스 토큰
        refreshToken:
          type: string
          description: 리프레시 토큰
        expiresIn:
          type: integer
          description: 액세스 토큰의 유효 기간 (초 단위)

    TokenResponse:
      type: object
      description: 토큰 발급 응답
      properties:
        accessToken:
          type: string
          description: 액세스 토큰
        refreshToken:
          type: string
          description: 리프레시 토큰
        expiresIn:
          type: integer
          description: 액세스 토큰의 유효 기간 (초 단위)

    LocationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Location'
      description: 위치 정보 리스트 응답

    Location:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "0191cd0e-a061-7213-b39e-51274c1e7c71"
        region:
          type: string
          example: "서울특별시"
        sub_region:
          type: string
          example: "종로구"
      required:
        - id
        - region
        - sub_region

    Company:
      type: object
      properties:
        id:
          type: string
          description: "회사 식별자"
        name:
          type: string
          description: "회사명"
      required:
        - id
        - name

    OSType:
      type: string
      enum: [ IOS, AOS ]
      description: 사용자의 운영 체제 유형

security:
  - BearerAuth: [ ]
